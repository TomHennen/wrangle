name: "Build and publish a container using best practices."

on:
  workflow_call:
    inputs:
      path:
        description: "A path, within the repo, to the folder containiner a Dockerfile you want to build."
        required: true
        type: string
      imagename:
        description: "The full path, including registry, specifying where the image should be published."
        required: true
        type: string
      registry:
        required: true
        type: string
      publish_provenance_for_private_repo:
        description: "Publish provenance to Sigstore for a private repo"
        required: false
        default: false
        type: boolean
    secrets:
      gh_token:
        description: "GitHub token with write access"
        required: true

jobs:
  build:
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      image: ${{ steps.build.outputs.image }}
    runs-on: ubuntu-latest
    steps:
    - name: "build and publish"
      id: build    
      uses: tomhennen/wrangle/publish/actions/container@main
      with:
        path: ${{ inputs.path }}
        imagename: ${{ inputs.imagename }}
        registry: ${{ inputs.registry }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
  provenance:
    # Generate provenance for anything that's not a PR
    # We should probably be more restrictive in the future?
    if: ${{ ! startsWith(github.event_name, 'pull_') }}
    needs: [build]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: ${{ needs.build.outputs.image }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: ${{ github.actor }}
      private-repository: ${{ inputs.publish_provenance_for_private_repo }}
    secrets:
      registry-password: ${{ secrets.gh_token }}
